#!/sbin/busybox sh

BB=/sbin/busybox;
wg=/system/xbin/wget;
MD5_url=https://coding.net/u/shminer930302/p/JZkernel_updater/git/raw/master/md5;
version_url=https://coding.net/u/shminer930302/p/JZkernel_updater/git/raw/master/version;
kernel_url=https://coding.net/u/shminer930302/p/JZkernel_updater/git/raw/master/JZ-F460-kernel.zip;
main=/sdcard/synapse/kernel_update;
check_update=0;
connect_good=0;
download_finished=0;
echo_message=0;
updating=0;

file_remove()
{
	if [ -e $1 ];then
		rm $1;
	fi
}

folder_remove()
{
	if [ -d $1 ];then
		rm -R $1;
	fi
}

package_download()
{	
	echo_message=0;
	check_version;
	if [ ${check_update} == 1 ];then
		file_remove *.zip
		file_remove md5
		file_remove wget-log*
		${wg}  ${MD5_url} --no-check-certificate > /dev/null 2>&1;
		${wg}  ${kernel_url} -O JZ-F460-kernel.zip --no-check-certificate > /dev/null 2>&1;
		md5_ori=`cat ${main}/md5 | $BB sed 's/[ \t]//' | $BB sed 's/JZ-F460-kernel.zip//'`;
		md5=`$BB md5sum ${main}/JZ-F460-kernel.zip | $BB sed 's/[ \t]//' | $BB sed 's/JZ-F460-kernel.zip//'`;
		if [ "${md5_ori}" == "${md5}" ];then
			echo "内核下载完成，解压中..."
			file_remove boot.img;
			folder_remove system;
			folder_remove META-INF;
			folder_remove tmp;
			$BB unzip JZ-F460-kernel.zip > /dev/null 2>&1;
			download_finished=1;
			else
			echo "下载失败，文件损坏，请重新下载"
		fi
	else
		echo "内核已是最新";
	fi
}

check_version()
{	
	file_remove version；
	file_remove version*；
	${wg} ${version_url} -O version --no-check-certificate > /dev/null 2>&1;
	if [ -e ${main}/version ];then
		last_version=$($BB cat version);
		cur_version=$($BB cat /cur_ver);
		if [ "${last_version}" -gt "${cur_version}" ];then
			if [ ${echo_message} == 1 ];then
				echo "发现新版本:${last_version}";
			fi
			check_update=1;
		else
			if [ ${echo_message} == 1 ];then
				echo "内核版本：${cur_version}";
			fi
		fi
	else
			echo "正在获取版本信息";
	fi
}
check_connection()
{
	file_remove testC;
	check_conn=`${wg} http://www.baidu.com -O testC > /dev/null 2>&1`;
	if [ $? != 0 ]; then
		echo "请检查网络连接";
	else
		connect_good=1;
	fi
	file_remove testC;
}

kernel_update()
{
	#install_system
	if [ -d system/etc ];then
		for i in `ls system/etc/`;do
			rm /system/etc/${i};
			cp system/etc/${i} /system/etc/${i};
			chmod 0755 /system/etc/${i};
		done
	fi
	
	if [ -d system/lib/modules ];then
		rm -R /system/lib/modules;
		cp -R system/lib/modules /system/lib/modules;
		chmod 0644 /system/lib/modules/*;
	fi
	
	if [ -d system/xbin ];then
		for i in `ls system/xbin/`;do
			rm /system/xbin/${i};
			cp system/xbin/${i} system/xbin/${i};
			chmod 0644 system/xbin/${i};
		done
	fi

	#install_kernel
	if [ -e boot.img ];then
		echo "install kernel"
		dd if=boot.img of=/dev/block/platform/msm_sdcc.1/by-name/boot > /dev/null 2>&1;
	fi

	#tweakthermal
	if [ -e /system/bin/thermal-engine ];then
		sed -i -e 's/sys\/devices\/system\/cpu/sas\/davicas\/sestem\/cnu/g' /system/bin/thermal-engine
		sed -i -e 's/scaling_*/scaagg_m/g' /system/bin/thermal-engine
		sed -i -e 's/am broadcast/am beoasdast/g' /system/bin/thermal-engine
		sed -i -e 's/devices\/system\/cpu\/cpu/devices\/system\/cau\/cru/g' /system/bin/thermal-engine
	fi
	echo "内核更新完毕";
}

if [ ! -d ${main} ];then
	mkdir ${main};
fi

cd ${main};
rm * > /dev/null 2>&1;
rm -R * > /dev/null 2>&1;

case $1 in
	kernelcheck)
		file_remove version*；
		file_remove wget-log*;
		echo_message=1;
		check_connection;
		if [ ${connect_good} == 1 ];then
			check_version;
		fi
	;;
	download)
			echo 1 > /sys/devices/virtual/lg_rgb_led/use_patterns/setting;
			echo "准备下载"
			updating=1;
			check_connection;
			if [ ${connect_good} == 1 ];then
				package_download;
				if [ ${download_finished} == 1 ];then
					kernel_update;
				fi
			fi
			echo 0 > /sys/devices/virtual/lg_rgb_led/use_patterns/setting;
	;;
esac
	



