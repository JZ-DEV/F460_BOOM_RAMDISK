cat << CTAG
{
    name:CPU,
    elements:[
	{ SLiveLabel:{
		title:"频率采样",
		description: "CPU频率调节也被thermal engine, mpdecision hotplug和CPU Boost影响. 你可以使用MSM Limiter来保证大部分时间处于你所设置的范围之间，但不是绝对的。下面的实时显示反映了每个CPU核心的真正的调节范围.",
		refresh:1000,
		action:"live SCALINGFREQ"
	}},
	{ STitleBar:{
		title:"MSM Limiter"
	}},
	{ SCheckBox:{
		label:"Enable",
		description:"这个选项将覆盖当前的最大和最小CPI频率. 下面的选项只有当MSM Limiter开启时才会被使能. 理想的最大频率应该比最小频率和input boost frequency高. 理想的最小频率应该比最大频率，最大关屏频率和input boost frequency低",
		default:`cat /sys/kernel/msm_limiter/limiter_enabled`,
		action:"generic /sys/kernel/msm_limiter/limiter_enabled",
	}},
	{ SSeekBar:{
       		title:"CPU0最大频率",
		description:"设置CPU0最大频率. CPU0被用于绝大多数的关键内核进程，推荐这个值不小于1.7 GHz,",
		default:`cat /sys/kernel/msm_limiter/resume_max_freq_0`,
		action:"generic /sys/kernel/msm_limiter/resume_max_freq_0",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU1最大频率",
		description:"设置CPU1最大频率.",
		default:`cat /sys/kernel/msm_limiter/resume_max_freq_1`,
		action:"generic /sys/kernel/msm_limiter/resume_max_freq_1",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU2最大频率",
		description:"设置CPU2最大频率.",
		default:`cat /sys/kernel/msm_limiter/resume_max_freq_2`,
		action:"generic /sys/kernel/msm_limiter/resume_max_freq_2",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU3最大频率",
		description:"设置CPU3最大频率..",
		default:`cat /sys/kernel/msm_limiter/resume_max_freq_3`,
		action:"generic /sys/kernel/msm_limiter/resume_max_freq_3",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"熄屏后CPU最大频率",
		description:"熄屏后CPU最大频率,对4个核心均有效.",
		default:`cat /sys/kernel/msm_limiter/suspend_max_freq`,,
		action:"generic /sys/kernel/msm_limiter/suspend_max_freq",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU0最小频率",
		description:"设置CPU0可以调节至的最低频率.",
		default:`cat /sys/kernel/msm_limiter/suspend_min_freq_0`,
		action:"generic /sys/kernel/msm_limiter/suspend_min_freq_0",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU1最小频率",
		description:"设置CPU1可以调节至的最低频率.",
		default:`cat /sys/kernel/msm_limiter/suspend_min_freq_1`,
		action:"generic /sys/kernel/msm_limiter/suspend_min_freq_1",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU2最小频率",
		description:"设置CPU2可以调节至的最低频率.",
		default:`cat /sys/kernel/msm_limiter/suspend_min_freq_2`,
		action:"generic /sys/kernel/msm_limiter/suspend_min_freq_2",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU3最小频率",
		description:"设置CPU3可以调节至的最低频率.",
		default:`cat /sys/kernel/msm_limiter/suspend_min_freq_3`,
		action:"generic /sys/kernel/msm_limiter/suspend_min_freq_3",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ STitleBar:{
		title:"CPU Boost",
	}},
	{ SDescription:{
		description:"当某些进程从一个高频CPU迁移另一个低频CPU时，CPU boost驱动程序将会在短时间内提升低频CPU的频率至第一个CPU的频率，在下面你可以改变CPU Boost参数"
	}},
	{ SSeekBar:{
		title:"CPU boost持续时间",
		description:"Sets boost period for which CPU is boosted when task migrates to slower CPU.",
		min:0, max:120,
		default:`cat /sys/module/cpu_boost/parameters/boost_ms`,
		unit:" ms",
		action:"generic /sys/module/cpu_boost/parameters/boost_ms",
	}},
	{ SSeekBar:{
		title:"Input Boost Duration",
		description:"Sets period for which idle CPU is boosted whenever there are incoming input/hotplug/wakeup_boost events. Keep this higher enough to get smoother experience on your rocking device.",
		min:0, max:1000, step: 10,
		default:`cat /sys/module/cpu_boost/parameters/input_boost_ms`,
		unit:" ms",
		action:"generic /sys/module/cpu_boost/parameters/input_boost_ms",
	}},
	{ SSeekBar:{
       		title:"CPU0 Input Boost Frequency",
		description:"Set the input boost frequency for CPU0.",
		default:1497600,
		action:"cpuboostibf 0",
		values:{
			0:"Disabled",
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU1 Input Boost Frequency",
		description:"Set the input boost frequency for CPU1.",
		default:1497600,
		action:"cpuboostibf 1",
		values:{
			0:"Disabled",
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU2 Input Boost Frequency",
		description:"Set the input boost frequency for CPU2.",
		default:1497600,
		action:"cpuboostibf 2",
		values:{
			0:"Disabled",
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU3 Input Boost Frequency",
		description:"Set the input boost frequency for CPU3.",
		default:1497600,
		action:"cpuboostibf 3",
		values:{
			0:"Disabled",
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"同步阈值",
		description:"During CPU Boost, frequency of slower CPU is matched with that of faster CPU, we can set limit to maximum frequency allowed for frequency synchronization. Should be greater or equal to Input Event Boost Frequency.",
		default:`cat /sys/module/cpu_boost/parameters/sync_threshold`,
		action:"generic /sys/module/cpu_boost/parameters/sync_threshold",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SCheckBox:{
		label:"Hotplug Boost",
		description:"Hotplug Boost is similar to input boost but it occurs when CPUs go online.",
		default:1,
		action:"boolean /sys/module/cpu_boost/parameters/hotplug_boost",
	}},
	{ SCheckBox:{
		label:"Wakeup Boost",
		description:"Wakeup Boost is similar to input boost but it occurs when screen is turned on.",
		default:0,
		action:"boolean /sys/module/cpu_boost/parameters/wakeup_boost",
	}},
	{ SPane:{
		title:"Power-efficient Workqueues",
	}},
	{ SCheckBox:{
		label:"Enable",
		description:"This will help to reduce power consumption at the cost of slight performance overhead. PE workqueues are used for unbound scheduled work to save load on sibling CPU cores and queuing work on CPU0.",
		default:1,
		action:"boolean /sys/module/workqueue/parameters/power_efficient",
	}},
	{ STitleBar:{
		title:"CPU调速器"
	}},
	{ SDescription:{
		description:"CPU调速器决定CPU在应对各种工作负载情形时的行为。更改调速器会影响CPU如何在可用频率间切换频率大小."
	}},
        { SOptionList:{
		title:"CPU0",
		default:`cat /sys/kernel/msm_limiter/scaling_governor_0`,
                action:"generic /sys/kernel/msm_limiter/scaling_governor_0",
                values:[
`
                        for GOVERNOR in \`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors\` ; do
                                echo "\"$GOVERNOR\","
                        done
`
                ],
		notify:[
			{
				on:APPLY,
				do:[ REFRESH, CANCEL ],
				to:"/sys/devices/system/cpu/cpufreq"
			},
			{
				on:REFRESH,
				do:REFRESH,
				to:"/sys/devices/system/cpu/cpufreq"
			}

		]
        }},
        { SOptionList:{
		title:"CPU1",
		default:`cat /sys/kernel/msm_limiter/scaling_governor_1`,
                action:"generic /sys/kernel/msm_limiter/scaling_governor_1",
                values:[
`
                        for GOVERNOR in \`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors\` ; do
                                echo "\"$GOVERNOR\","
                        done
`
                ],
		notify:[
			{
				on:APPLY,
				do:[ REFRESH, CANCEL ],
				to:"/sys/devices/system/cpu/cpufreq"
			},
			{
				on:REFRESH,
				do:REFRESH,
				to:"/sys/devices/system/cpu/cpufreq"
			}
		]
        }},
	{ SOptionList:{
		title:"CPU2",
		default:`cat /sys/kernel/msm_limiter/scaling_governor_2`,
                action:"generic /sys/kernel/msm_limiter/scaling_governor_2",
                values:[
`
                        for GOVERNOR in \`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors\` ; do
                                echo "\"$GOVERNOR\","
                        done
`
                ],
		notify:[
			{
				on:APPLY,
				do:[ REFRESH, CANCEL ],
				to:"/sys/devices/system/cpu/cpufreq"
			},
			{
				on:REFRESH,
				do:REFRESH,
				to:"/sys/devices/system/cpu/cpufreq"
			}
		]
        }},
	{ SOptionList:{
		title:"CPU3",
		default:`cat /sys/kernel/msm_limiter/scaling_governor_3`,
                action:"generic /sys/kernel/msm_limiter/scaling_governor_3",
                values:[
`
                        for GOVERNOR in \`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors\` ; do
                                echo "\"$GOVERNOR\","
                        done
`
                ],
		notify:[
			{
				on:APPLY,
				do:[ REFRESH, CANCEL ],
				to:"/sys/devices/system/cpu/cpufreq"
			},
			{
				on:REFRESH,
				do:REFRESH,
				to:"/sys/devices/system/cpu/cpufreq"
			}
		]
        }},
	{ STitleBar:{
		title:"调度器微调"
        }},
	{ STreeDescriptor:{
		description:"The various configuration items which are governor-dependent.",
		path:"/sys/devices/system/cpu/cpufreq",
		generic: {
			directory: {
				STreeDescriptor:{
					generic: {
						directory: {},
						element: {
							SGeneric: { title:"@NAME" }
						}
					},
					matched: {
						elements: [
							{ "sampling_rate" : {
								SSeekBar: {
									title:"Sampling rate",
									description:"The sampling rate controls the frequency in which the governor polls for frequency changes.",
									min:10000, max:300000, step:10000, unit:"ms"
								}
							}}
						]
					},
					exclude: [
						"boost_duration",
						"boostpulse",
						"cpu_utilization",
						"sampling_rate_min",
						"up_threshold_h",
						"up_threshold_l",
						"multi_phase_freq_tbl",
						"profile_list",
						"version_profiles",
						"profile"
					]
				}
			}
		},
		exclude: [ "kset", "stats" ]
	}},
    ]
}
CTAG
